##############################################################################
# Copyright 2020-2023 Leon Lynch
#
# This file is licensed under the terms of the LGPL v2.1 license.
# See LICENSE file.
##############################################################################

cmake_minimum_required(VERSION 3.16)

# assume that only GCC supports __attribute__((nonstring))
if(CMAKE_C_COMPILER_ID STREQUAL "GNU")
	set(HAVE_ATTRIBUTE_NONSTRING TRUE)
	set(NONSTRING "__attribute__((nonstring))")
else()
	set(HAVE_ATTRIBUTE_NONSTRING FALSE)
	unset(NONSTRING)
endif()

# check for headers that provide ntohs/htons and friends
include(CheckIncludeFile)
CHECK_INCLUDE_FILE(
	arpa/inet.h
	HAVE_ARPA_INET_H
)
CHECK_INCLUDE_FILE(
	winsock.h
	HAVE_WINSOCK_H
)
if(NOT HAVE_ARPA_INET_H AND NOT HAVE_WINSOCK_H)
	message(FATAL_ERROR "Failed to find either arpa/inet.h or winsock.h")
endif()

# build TR-31 tool by default
option(BUILD_TR31_TOOL "Build tr31-tool" ON)

# check for argp or allow the FETCH_ARGP option to download and build a local
# copy of libargp for monolithic builds on platforms without package managers
# like MacOS and Windows.
option(FETCH_ARGP "Download and build libargp")
if(FETCH_ARGP)
	set(ARGP_OSX_ARCHITECTURES ${CMAKE_OSX_ARCHITECTURES})
	include(FetchLibArgp)
else()
	find_package(argp)
endif()
if(NOT argp_FOUND)
	if(BUILD_TR31_TOOL)
		message(FATAL_ERROR "Could NOT find argp. Enable FETCH_ARGP to download and build libargp. This is required to build tr31-tool.")
	endif()
endif()

# check for features required for date/time conversion:
# locale.h, time.h, setlocale(), strptime(), timegm(), _mkgmtime()
include(CheckIncludeFile)
include(CheckSymbolExists)
CHECK_INCLUDE_FILE(locale.h HAVE_LOCALE_H)
CHECK_INCLUDE_FILE(time.h HAVE_TIME_H)
check_symbol_exists(setlocale locale.h HAVE_SETLOCALE)
check_symbol_exists(strptime time.h HAVE_STRPTIME)
set(TIME_H_DEFINITIONS_TRY _GNU_SOURCE) # Retry using _GNU_SOURCE
if(NOT HAVE_STRPTIME)
	unset(HAVE_STRPTIME CACHE)
	list(APPEND CMAKE_REQUIRED_DEFINITIONS -D${TIME_H_DEFINITIONS_TRY})
	check_symbol_exists(strptime time.h HAVE_STRPTIME)
	list(REMOVE_ITEM CMAKE_REQUIRED_DEFINITIONS -D${TIME_H_DEFINITIONS_TRY})
	if(HAVE_STRPTIME)
		# set as cache entry to persist across multiple builds
		set(TIME_H_DEFINITIONS ${TIME_H_DEFINITIONS_TRY} CACHE INTERNAL "Definitions required for time.h")
	endif()
endif()
check_symbol_exists(timegm time.h HAVE_TIMEGM)
if(NOT HAVE_TIMEGM)
	unset(HAVE_TIMEGM CACHE)
	list(APPEND CMAKE_REQUIRED_DEFINITIONS -D${TIME_H_DEFINITIONS_TRY})
	check_symbol_exists(timegm time.h HAVE_TIMEGM)
	list(REMOVE_ITEM CMAKE_REQUIRED_DEFINITIONS -D${TIME_H_DEFINITIONS_TRY})
	if(HAVE_TIMEGM)
		# set as cache entry to persist across multiple builds
		set(TIME_H_DEFINITIONS ${TIME_H_DEFINITIONS_TRY} CACHE INTERNAL "Definitions required for time.h")
	endif()
endif()
if(WIN32)
	check_symbol_exists(_mkgmtime time.h HAVE_MKGMTIME)
endif()
# Only setlocale() and either timegm() or _mkgmtime are required for date/time
# conversion. If strptime() is absent, sscanf() will be used instead.
if(HAVE_SETLOCALE AND (HAVE_TIMEGM OR HAVE_MKGMTIME))
	message(STATUS "Enabling date/time conversion")
	# set as cache entry to persist across multiple builds
	set(TR31_ENABLE_DATETIME_CONVERSION ON CACHE INTERNAL "Date/time conversion availability")
else()
	message(STATUS "Disabling date/time conversion; some tests may fail")
	# set as cache entry to persist across multiple builds
	set(TR31_ENABLE_DATETIME_CONVERSION OFF CACHE INTERNAL "Date/time conversion availability")
endif()
# option to use sscanf() for date/time parsing even when strptime() is
# available
option(TR31_USE_SSCANF_DATETIME "Use sscanf() for date/time parsing")
if(HAVE_STRPTIME AND NOT TR31_USE_SSCANF_DATETIME)
	message(STATUS "Using strptime() for date/time parsing")
else()
	message(STATUS "Using sscanf() for date/time parsing")
endif()

include(GNUInstallDirs) # provides CMAKE_INSTALL_* variables and good defaults for install()

# generate config file for internal use only
# this file should NOT be installed or used by an installed header
configure_file(
	tr31_config.h.in
	tr31_config.h
)

# TR-31 library
add_library(tr31
	tr31.c
	tr31_crypto.c
	tr31_strings.c
)
if(TIME_H_DEFINITIONS)
	set_source_files_properties(tr31_strings.c
		PROPERTIES
			COMPILE_DEFINITIONS ${TIME_H_DEFINITIONS}
	)
endif()
set_target_properties(tr31
	PROPERTIES
		PUBLIC_HEADER tr31.h
		VERSION ${CMAKE_PROJECT_VERSION}
		SOVERSION ${CMAKE_PROJECT_VERSION_MAJOR}.${CMAKE_PROJECT_VERSION_MINOR}
)
target_include_directories(tr31 PRIVATE ${CMAKE_CURRENT_BINARY_DIR}) # for generated config file
target_include_directories(tr31 INTERFACE
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
	$<INSTALL_INTERFACE:include/${PROJECT_NAME}>
)
target_link_libraries(tr31 PRIVATE crypto_tdes crypto_aes crypto_mem crypto_rand)
if(HAVE_WINSOCK_H AND NOT HAVE_ARPA_INET_H)
	target_link_libraries(tr31 PRIVATE ws2_32)
endif()

install(
	TARGETS
		crypto_tdes
		crypto_aes
		crypto_mem
		crypto_rand
		tr31
	EXPORT tr31Targets # for use by install(EXPORT) command
	PUBLIC_HEADER
		DESTINATION "include/${PROJECT_NAME}"
		COMPONENT tr31_development
	RUNTIME
		COMPONENT tr31_runtime
	LIBRARY
		COMPONENT tr31_runtime
		NAMELINK_COMPONENT tr31_development
	ARCHIVE
		COMPONENT tr31_development
)

# TR-31 command line tool
if(BUILD_TR31_TOOL)
	add_executable(tr31-tool tr31-tool.c)
	target_link_libraries(tr31-tool PRIVATE tr31)
	if(TARGET libargp::argp)
		target_link_libraries(tr31-tool PRIVATE libargp::argp)
	endif()

	install(
		TARGETS
			tr31-tool
		EXPORT tr31Targets # for use by install(EXPORT) command
		RUNTIME
			COMPONENT tr31_runtime
	)
endif()

if(TARGET tr31-tool AND BUILD_TESTING)
	add_test(NAME tr31_tool_test1
		COMMAND tr31-tool --import B0128B1TX00N0300KS18FFFF00A0200001E00000KC0C000169E3KP0C00ECAD626F9F1A826814AA066D86C8C18BD0E14033E1EBEC75BEDF586E6E325F3AA8C0E5 --kbpk AB2E09DB3EF0BA71E0CE6CD755C23A3B
	)
	string(CONCAT tr31_tool_test1_regex
		"^Key block format version: B[\r\n]"
		"Key block length: 128 bytes[\r\n]"
		"Key usage: \\[B1\\] Initial DUKPT Key \\(IK/IPEK\\)[\r\n]"
		"Key algorithm: \\[T\\] TDES[\r\n]"
		"Key mode of use: \\[X\\] Key Derivation[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[3\\]:[\r\n]"
		"\t\\[KS\\] Initial Key Serial Number \\(KSN\\): FFFF00A0200001E00000[\r\n]"
		"\t\\[KC\\] Key Check Value \\(KCV\\) of wrapped key: 0169E3 \\(Legacy KCV algorithm\\)[\r\n]"
		"\t\\[KP\\] Key Check Value \\(KCV\\) of KBPK: ECAD62 \\(Legacy KCV algorithm\\)[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: BF82DAC6A33DF92CE66E15B70E5DCEB6 \\(KCV: 0169E3\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test1
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test1_regex}
	)

	add_test(NAME tr31_tool_test2
		COMMAND tr31-tool --import D0112B0TN00N000037DB9B046B7B0048785690759580ABC3B9842AB4BB7717B49E92528E575785D8123559376A2553B27BE94F054F4E971C --kbpk 4141414141414141414141414141414141414141414141414141414141414141
	)
	string(CONCAT tr31_tool_test2_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 112 bytes[\r\n]"
		"Key usage: \\[B0\\] Base Derivation Key \\(BDK\\)[\r\n]"
		"Key algorithm: \\[T\\] TDES[\r\n]"
		"Key mode of use: \\[N\\] No special restrictions[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: 1FA1F7CEC798D91545DA8AE0C7796BD9 \\(KCV: FF5087\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test2
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test2_regex}
	)

	add_test(NAME tr31_tool_test3
		COMMAND tr31-tool --import D0144B0AN00N0000DCD6D7E8108277E3304831A744F741A51A30695A2F764C6E42A1F54086FF0C3F5F9BEC889F20C6F613EF790A09381A5855B9464E598CBE24E537B6FE0F602297 --kbpk 4141414141414141414141414141414141414141414141414141414141414141
	)
	string(CONCAT tr31_tool_test3_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 144 bytes[\r\n]"
		"Key usage: \\[B0\\] Base Derivation Key \\(BDK\\)[\r\n]"
		"Key algorithm: \\[A\\] AES[\r\n]"
		"Key mode of use: \\[N\\] No special restrictions[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Key length: 32[\r\n]"
		"Key value: 6189A1111AAB43DC8BEAEEAE29799C4212070D66F8933EFACE8879C7DB609DEA \\(KCV: 69EBA40B13\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test3
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test3_regex}
	)

	add_test(NAME tr31_tool_test4
		COMMAND tr31-tool --import D0144B0AN00N000004E08A6000D7B21A5CFFE0F24E449A21D9BE3F975D33DB02D50CF9A6CCD2F6B6DB375CBCCCA648E0FB991432CA3957E810B087CDA7FA44538CC94C97FFF6D696 --kbpk 4141414141414141414141414141414141414141414141414141414141414141
	)
	string(CONCAT tr31_tool_test4_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 144 bytes[\r\n]"
		"Key usage: \\[B0\\] Base Derivation Key \\(BDK\\)[\r\n]"
		"Key algorithm: \\[A\\] AES[\r\n]"
		"Key mode of use: \\[N\\] No special restrictions[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Key length: 32[\r\n]"
		"Key value: 6189A1111AAB43DC8BEAEEAE29799C4212070D66F8933EFACE8879C7DB609DEA \\(KCV: 69EBA40B13\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test4
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test4_regex}
	)

	add_test(NAME tr31_tool_test5
		COMMAND tr31-tool --import D0144D0AN00N0000127862F945C2DED04530FAF7CDBC8B0BA10C7AA79BD5E0C2C5D6AC173BF588E4B19ACF1357178D50EA0AB193228E13958304FC6149632DFDCADF3A5B3D57E814 --kbpk 4141414141414141414141414141414141414141414141414141414141414141
	)
	string(CONCAT tr31_tool_test5_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 144 bytes[\r\n]"
		"Key usage: \\[D0\\] Symmetric Key for Data Encryption[\r\n]"
		"Key algorithm: \\[A\\] AES[\r\n]"
		"Key mode of use: \\[N\\] No special restrictions[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Key length: 32[\r\n]"
		"Key value: BE19E6A07A760F10EF8E83A226B63AAD141F463FDDD4F47DB244B4023EC3CACC \\(KCV: 0A00E31EEB\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test5
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test5_regex}
	)

	add_test(NAME tr31_tool_test6
		COMMAND tr31-tool --kbpk 1D22BF32387C600AD97F9B97A51311AC --export E8BC63E5479455E26577F715D587FE68 --export-key-algorithm TDES --export-format-version B --export-template IK
	)
	set_tests_properties(tr31_tool_test6
		PROPERTIES
			WILL_FAIL TRUE # because --export-opt-block-KS is absent
	)

	add_test(NAME tr31_tool_test7
		COMMAND tr31-tool --kbpk B8ED59E0A279A295E9F5ED7944FD06B9 --export EDB380DD340BC2620247D445F5B8D678 --export-key-algorithm TDES --export-format-version C --export-template BDK --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test7
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^C0072B0TX00E0000"
	)

	add_test(NAME tr31_tool_test8
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-key-algorithm AES --export-format-version D --export-template KEK --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test8
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0112K0AB00E0000"
	)

	add_test(NAME tr31_tool_test9
		COMMAND tr31-tool --kbpk 1D22BF32387C600AD97F9B97A51311AC --export E8BC63E5479455E26577F715D587FE68 --export-header B0080B1TX00N0000 --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test9
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^B0080B1TX00N0000"
	)

	add_test(NAME tr31_tool_test10
		COMMAND tr31-tool --kbpk B8ED59E0A279A295E9F5ED7944FD06B9 --export EDB380DD340BC2620247D445F5B8D678 --export-header C0072B0TX00E0000 --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test10
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^C0072B0TX00E0000"
	)

	add_test(NAME tr31_tool_test11
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-header D0112K0AB00E0000 --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test11
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0112K0AB00E0000"
	)

	add_test(NAME tr31_tool_test12
		COMMAND tr31-tool --kbpk 1D22BF32387C600AD97F9B97A51311AC --export E8BC63E5479455E26577F715D587FE68 --export-key-algorithm TDES --export-format-version B --export-template IK --export-opt-block-KS FFFF00A0200001E00000 --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test12
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^B0104B1TX00N0100KS18FFFF00A0200001E00000"
	)

	add_test(NAME tr31_tool_test13
		COMMAND tr31-tool --kbpk 1D22BF32387C600AD97F9B97A51311AC --export E8BC63E5479455E26577F715D587FE68 --export-header B0000B1TX00N0000 --export-opt-block-KS FFFF00A0200001E00000 --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test13
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^B0104B1TX00N0100KS18FFFF00A0200001E00000"
	)

	add_test(NAME tr31_tool_test14
		COMMAND tr31-tool --kbpk B8ED59E0A279A295E9F5ED7944FD06B9 --export EDB380DD340BC2620247D445F5B8D678 --export-key-algorithm TDES --export-format-version C --export-template BDK --export-opt-block-KC --export-opt-block-KP --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test14
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^C0096B0TX00E0200KC0C00F4B08DKP0C002F0EEA"
	)

	add_test(NAME tr31_tool_test15
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-key-algorithm AES --export-format-version D --export-template KEK --export-opt-block-KC --export-opt-block-KP --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test15
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0144K0AB00E0200KC100108793E25ABKP10012331550BC9"
	)

	add_test(NAME tr31_tool_test16
		COMMAND tr31-tool --kbpk 4141414141414141414141414141414141414141414141414141414141414141 --export 1273671EA26AC29AFA4D1084127652A1 --export-key-algorithm AES --export-format-version D --export-template IK --export-opt-block-IK 1234567890123456 --export-no-key-length-obfuscation --export-zero-opt-block-PB
	)
	set_tests_properties(tr31_tool_test16
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0144B1AX00N0200IK141234567890123456PB0C00000000"
	)

	add_test(NAME tr31_tool_test17
		COMMAND tr31-tool --kbpk 4141414141414141414141414141414141414141414141414141414141414141 --export 1273671EA26AC29AFA4D1084127652A1 --export-header D0000B1AX00N0000 --export-opt-block-IK 1234567890123456 --export-no-key-length-obfuscation --export-zero-opt-block-PB
	)
	set_tests_properties(tr31_tool_test17
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0144B1AX00N0200IK141234567890123456PB0C00000000"
	)

	add_test(NAME tr31_tool_test18
		COMMAND tr31-tool --kbpk 3235362D62697420414553207772617070696E67202849534F20323030333829 --export 777261707065642033444553206B6579 --export-header E0084B0TV16N0000 --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test18
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^E0084B0TV16N0000B2AE5E26BBA7F246E84D5EA24167E208A6B66EF2E27E55A52DB52F0AEACB94C57547"
	)

	add_test(NAME tr31_tool_test19
		COMMAND tr31-tool --kbpk 3235362D62697420414553207772617070696E67202849534F20323030333829 --export 777261707065642033444553206B6579 --export-key-algorithm TDES --export-format-version E --export-template BDK --export-no-key-length-obfuscation
	)
	set_tests_properties(tr31_tool_test19
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^E0084B0TX00E000091549081F898337CE9C68236C1349B6151AB4B48F77C61348C94CD65537306BEE1C5"
	)

	add_test(NAME tr31_tool_test20
		COMMAND tr31-tool --import D0144B1TX00S0200KS181ED9D500000001200000PB08nD8U3CAC6F42EF3E1711310E8BC2738E30211D3A1AB6EA61254CE37B5C162C743D1DAB6C866E69354E0276D7E744AAFB3425 --kbpk 0123456789ABCDEFFEDCBA9876543210
	)
	string(CONCAT tr31_tool_test20_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 144 bytes[\r\n]"
		".*"
		"Optional blocks \\[2\\]:[\r\n]"
		"\t\\[KS\\] Initial Key Serial Number \\(KSN\\): 1ED9D500000001200000[\r\n]"
		"\t\\[PB\\] Padding Block: \"nD8U\"[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: 4AC3A7637268E618C52C97CE7766F26A \\(KCV: 72098B\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test20
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test20_regex}
	)

	add_test(NAME tr31_tool_test21
		COMMAND tr31-tool --kbpk 0123456789ABCDEFFEDCBA9876543210 --export 4AC3A7637268E618C52C97CE7766F26A --export-header D0000D0TB00S0000 --export-opt-block-TC 20190717181929Z --export-opt-block-TS 20200818192030Z
	)
	set_tests_properties(tr31_tool_test21
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0160D0TB00S0300TC1320190717181929ZTS1320200818192030ZPB0A"
	)

	add_test(NAME tr31_tool_test22
		COMMAND tr31-tool --kbpk 0123456789ABCDEFFEDCBA9876543210 --export 4AC3A7637268E618C52C97CE7766F26A --export-header D0000D0TB00S0000 --export-opt-block-TC 2019071718192921Z --export-opt-block-TS 2020081819203022Z
	)
	set_tests_properties(tr31_tool_test22
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0160D0TB00S0300TC152019071718192921ZTS152020081819203022ZPB06"
	)

	add_test(NAME tr31_tool_test23
		COMMAND tr31-tool --kbpk 0123456789ABCDEFFEDCBA9876543210 --export 4AC3A7637268E618C52C97CE7766F26A --export-header D0000D0TB00S0000 --export-opt-block-TC 2017-05-17T19:41:38Z --export-opt-block-TS 2018-06-18T20:42:39Z
	)
	set_tests_properties(tr31_tool_test23
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0160D0TB00S0200TC182017-05-17T19:41:38ZTS182018-06-18T20:42:39"
	)

	add_test(NAME tr31_tool_test24
		COMMAND tr31-tool --kbpk 0123456789ABCDEFFEDCBA9876543210 --export 4AC3A7637268E618C52C97CE7766F26A --export-header D0000D0TB00S0000 --export-opt-block-TC 2017-05-17T19:41:38.21Z --export-opt-block-TS 2018-06-18T20:42:39.22Z
	)
	set_tests_properties(tr31_tool_test24
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0176D0TB00S0300TC1B2017-05-17T19:41:38.21ZTS1B2018-06-18T20:42:39.22ZPB0A"
	)

	add_test(NAME tr31_tool_test25
		COMMAND tr31-tool --kbpk 0123456789ABCDEFFEDCBA9876543210 --import D0160D0TB00S0300TC1320190717181929ZTS1320200818192030ZPB0AMn6Rg3B31D549F386D00422AA0C5BA5DAF057C1AA495ACC79AF92500D381AD3F3462F927DDA9DCFB6158C33B5D63CA08791F76
	)
	string(CONCAT tr31_tool_test25_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 160 bytes[\r\n]"
		".*"
		"Optional blocks \\[3\\]:[\r\n]"
		"\t\\[TC\\] Time of Creation: \"20190717181929Z\" \\(.*\\)[\r\n]"
		"\t\\[TS\\] Time Stamp: \"20200818192030Z\" \\(.*\\)[\r\n]"
		"\t\\[PB\\] Padding Block: \"Mn6Rg3\"[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: 4AC3A7637268E618C52C97CE7766F26A \\(KCV: 72098B\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test25
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test25_regex}
	)

	add_test(NAME tr31_tool_test26
		COMMAND tr31-tool --kbpk 0123456789ABCDEFFEDCBA9876543210 --import D0160D0TB00S0300TC152019071718192921ZTS152020081819203022ZPB063r3AFB97760D5C46D3EE774A00FA8C1393F259B5862F89AC477F66560B593A2CE20EE5638FE26717B7DB067D508B2C3A98
	)
	string(CONCAT tr31_tool_test26_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 160 bytes[\r\n]"
		".*"
		"Optional blocks \\[3\\]:[\r\n]"
		"\t\\[TC\\] Time of Creation: \"2019071718192921Z\" \\(.*\\)[\r\n]"
		"\t\\[TS\\] Time Stamp: \"2020081819203022Z\" \\(.*\\)[\r\n]"
		"\t\\[PB\\] Padding Block: \"3r\"[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: 4AC3A7637268E618C52C97CE7766F26A \\(KCV: 72098B\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test26
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test26_regex}
	)

	add_test(NAME tr31_tool_test27
		COMMAND tr31-tool --kbpk 0123456789ABCDEFFEDCBA9876543210 --import D0160D0TB00S0200TC182017-05-17T19:41:38ZTS182018-06-18T20:42:39Z8334D53013CF72F36AC047C75ADDB106075ACD7F179C07D21D0DCE06D2F507BC16FA0E3C2C2A5266A55D220F35A3C920
	)
	string(CONCAT tr31_tool_test27_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 160 bytes[\r\n]"
		".*"
		"Optional blocks \\[2\\]:[\r\n]"
		"\t\\[TC\\] Time of Creation: \"2017-05-17T19:41:38Z\" \\(.*\\)[\r\n]"
		"\t\\[TS\\] Time Stamp: \"2018-06-18T20:42:39Z\" \\(.*\\)[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: 4AC3A7637268E618C52C97CE7766F26A \\(KCV: 72098B\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test27
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test27_regex}
	)

	add_test(NAME tr31_tool_test28
		COMMAND tr31-tool --kbpk 0123456789ABCDEFFEDCBA9876543210 --import D0176D0TB00S0300TC1B2017-05-17T19:41:38.21ZTS1B2018-06-18T20:42:39.22ZPB0A0tGy4eABD31E32E882F6BC6E198890F6EDA720396691AC57710BBC6CF22CC164A1E80D06FE38EE315657DD0DA9ED1EDC6754B2
	)
	string(CONCAT tr31_tool_test28_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 176 bytes[\r\n]"
		".*"
		"Optional blocks \\[3\\]:[\r\n]"
		"\t\\[TC\\] Time of Creation: \"2017-05-17T19:41:38.21Z\" \\(.*\\)[\r\n]"
		"\t\\[TS\\] Time Stamp: \"2018-06-18T20:42:39.22Z\" \\(.*\\)[\r\n]"
		"\t\\[PB\\] Padding Block: \"0tGy4e\"[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: 4AC3A7637268E618C52C97CE7766F26A \\(KCV: 72098B\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test28
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test28_regex}
	)

	add_test(NAME tr31_tool_test29
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-key-algorithm AES --export-format-version D --export-template BDK --export-opt-block-BI 08793E25 --export-opt-block-KC --export-opt-block-KP
	)
	set_tests_properties(tr31_tool_test29
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0208B0AX00E0400BI0E0108793E25KC100108793E25ABKP10012331550BC9PB12"
	)

	add_test(NAME tr31_tool_test30
		COMMAND tr31-tool --kbpk B8ED59E0A279A295E9F5ED7944FD06B9 --import B0136B0TX00E0300BI100008793E2500KC0C00F4B08DKP0C002F0EEA16BD28BCC923ED336AF77733257CD5238E406F957CEDFE9172E7B2C88377EAC6884223A69E9B499D
	)
	string(CONCAT tr31_tool_test30_regex
		"^Key block format version: B[\r\n]"
		"Key block length: 136 bytes[\r\n]"
		"Key usage: \\[B0\\] Base Derivation Key \\(BDK\\)[\r\n]"
		"Key algorithm: \\[T\\] TDES[\r\n]"
		"Key mode of use: \\[X\\] Key Derivation[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[E\\] Exportable in a trusted key block only[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[3\\]:[\r\n]"
		"\t\\[BI\\] Base Derivation Key \\(BDK\\) Identifier: 08793E2500 \\(Key Set ID\\)[\r\n]"
		"\t\\[KC\\] Key Check Value \\(KCV\\) of wrapped key: F4B08D \\(Legacy KCV algorithm\\)[\r\n]"
		"\t\\[KP\\] Key Check Value \\(KCV\\) of KBPK: 2F0EEA \\(Legacy KCV algorithm\\)[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: EDB380DD340BC2620247D445F5B8D678 \\(KCV: F4B08D\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test30
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test30_regex}
	)

	add_test(NAME tr31_tool_test31
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-header D0000B3AX00E0000 --export-opt-block-DA D2ABND3AEN --export-opt-block-LB "My Great Key" --export-opt-block-PK 9876543210 --export-opt-block-WP 3
	)
	set_tests_properties(tr31_tool_test31
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0208B3AX00E0500DA1001D2ABND3AENLB10My Great KeyPK10019876543210WP07003PB09"
	)

	add_test(NAME tr31_tool_test32
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --import "D0208B3AX00E0500DA1001D2ABND3AENLB10My Great KeyPK10019876543210WP07003PB09AcsovCCFF2ACD2116AB1CD7923B7C1AC7DD614EAC0EB7B6FE94BE3576D985E9E2AD3AF493FCB1B5CA34C51AB7A84D2C98DEAB51C6C51F82BFAD1DD1A82EB14C8FEB85"
	)
	string(CONCAT tr31_tool_test32_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 208 bytes[\r\n]"
		"Key usage: \\[B3\\] Key Derivation Key[\r\n]"
		"Key algorithm: \\[A\\] AES[\r\n]"
		"Key mode of use: \\[X\\] Key Derivation[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[E\\] Exportable in a trusted key block only[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[5\\]:[\r\n]"
		"\t\\[DA\\] Derivation\\(s\\) Allowed for Derivation Keys: D2ABN,D3AEN[\r\n]"
		"\t\\[LB\\] Label: \"My Great Key\"[\r\n]"
		"\t\\[PK\\] Protection Key Check Value \\(KCV\\) of export KBPK: 9876543210 \\(CMAC based KCV\\)[\r\n]"
		"\t\\[WP\\] Wrapping Pedigree: 3 \\(Asymmetric key at risk of quantum computing and symmetric key of lesser effective strength\\)[\r\n]"
		"\t\\[PB\\] Padding Block: \"Acsov\"[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: 3F419E1CB7079442AA37474C2EFBF8B8 \\(KCV: 08793E25AB\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test32
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test32_regex}
	)

	# test HMAC key for ANSI X9.143
	add_test(NAME tr31_tool_test33
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-header D0000M7HG00N0000 --export-opt-block-HM 21
	)
	set_tests_properties(tr31_tool_test33
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0128M7HG00N0200HM0621PB0A"
	)

	# test HMAC key for ANSI X9.143
	add_test(NAME tr31_tool_test34
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --import D0128M7HG00N0200HM0621PB0A5V5E8F634619D84C6040EAC3C1CA6A5FE60C5292E778FC95ABBECE94C3AD060C5F4C128796A100FF035A4BFB16C36449550131
	)
	string(CONCAT tr31_tool_test34_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 128 bytes[\r\n]"
		"Key usage: \\[M7\\] HMAC Key[\r\n]"
		"Key algorithm: \\[H\\] HMAC[\r\n]"
		"Key mode of use: \\[G\\] MAC Generate Only[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[2\\]:[\r\n]"
		"\t\\[HM\\] Hash algorithm for HMAC: 21 \\(SHA-256\\)[\r\n]"
		"\t\\[PB\\] Padding Block: \"5V5E8F\"[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: 3F419E1CB7079442AA37474C2EFBF8B8[\r\n]"
	)
	set_tests_properties(tr31_tool_test34
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test34_regex}
	)

	# ANSI X9.143:2021, 8.5
	add_test(NAME tr31_tool_test35
		COMMAND tr31-tool --kbpk FA36E44278DB3AB5F298F9F7DA8F1F88 --import D3776S0RS00N0400CT0004050000MIIDszCCApugAwIBAgIIKpD5FKMfCZEwDQYJKoZIhvcNAQELBQAwLTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxEjAQBgNVBAMMCVNhbXBsZSBDQTAeFw0yMDA4MTUwMjE0MTBaFw0yMTA4MTUwMjE0MTBaME8xFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MR8wHQYDVQQLDBZUTFMgQ2xpZW50IENlcnRpZmljYXRlMRMwEQYDVQQDDAoxMjM0NTY3ODkwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1sRg+wEuje3y14V0tFHpvxxpY/fyrldB0nRctBDn4AvkBfyJuDLG59vqkGXVd8J8YQdwEHZJrVq+7B8rjtM6PMoyH/7QAZZAC7tw740P4cfen1IryubZVviV9QUp+gHToelZfr1rfIsuEGhzo6UhwY70kkS87/rYHCVathZEjMmvUIEdpzg0PZ2+Heg6D35OQ70I+np+BsEQf71Zr+d2iKqVGEd50l8tbn4W3A4rOyUERPTaACwS9rvdF7nlmTqSI5ybN6lmm37a71h77n6M54aaw2KkJYWVo+1stUTyFVsv/YBs9aylbBHQOYqp/U2tB0TxM58QYGzyaWvNqbFzOQIDAQABo4G0MIGxMAkGA1UdEwQCMAAwDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMCMB0GA1UdDgQWBBR837QRAGx5uL9xDnRjr9L9WSBSlzAfBgNVHSMEGDAWgBSlXhVYy9bic9OLnRsxsFgKQQbLmTA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vY3JsLmFscGhhLW1lcmNoYW50LmV4YW1wbGUvU2FtcGxlQ0EuY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQCH6JusIBSkRDqzAohaSoJVAEwQGMdcUSQWDfMyJjZqkOep1kT8Sl7LolFmmmVRJdkTWZe4PxBfQUc/eIql9BIx90506B+j9aoVA7212OExAid78GgqKA6JoalhYQKRta9ixY8iolydTYyEYpegA1jFZavMQma4ZGwX/bDJWr4+cJYxJXWaf67g4AMqHaWC8J60MVjrrBe9BZ0ZstuIlNkktQUOZanqxqsrFeqz02ibwTwNHtaHQCztB4KgdTkrTNahkqeq6xjafDoTllNo1EddajnbA/cVzF9ZCNigDtg5chXHWIQbgEK7HmU3sY3/wd2Bh1KdF3+vpN+5iZMRNv
	)
	string(CONCAT tr31_tool_test35_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 3776 bytes[\r\n]"
		"Key usage: \\[S0\\] Asymmetric Key Pair for Digital Signature[\r\n]"
		"Key algorithm: \\[R\\] RSA[\r\n]"
		"Key mode of use: \\[S\\] Signature Only[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[4\\]:[\r\n]"
		"\t\\[CT\\] Public Key Certificate: \"MIIDszCCApugAwIB.*F3\\+vpN\\+5iZMRNv7Z\" \\(X\\.509 certificate\\)[\r\n]"
		"\t\\[KP\\] Key Check Value \\(KCV\\) of KBPK: D77F007724 \\(CMAC based KCV\\)[\r\n]"
		"\t\\[TS\\] Time Stamp: \"20200818221218Z\" \\(.*\\)[\r\n]"
		"\t\\[PB\\] Padding Block: \"000000000\"[\r\n]"
		"Key length: 1192[\r\n]"
		"Key value: 308204A402010002.*1641B00E23636A68[\r\n]"
	)
	set_tests_properties(tr31_tool_test35
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test35_regex}
	)

	# ANSI X9.143:2021, 8.6
	add_test(NAME tr31_tool_test36
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --import D1840S0ES00N0400CT000405CC020002F0MIICLjCCAdSgAwIBAgIIGDrdWBxuNpAwCgYIKoZIzj0EAwIwMTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxFjAUBgNVBAMMDVNhbXBsZSBFQ0MgQ0EwHhcNMjAwODE1MDIxMDEwWhcNMjEwODE1MDIxMDEwWjBPMRcwFQYDVQQKDA5BbHBoYSBNZXJjaGFudDEfMB0GA1UECwwWVExTIENsaWVudCBDZXJ0aWZpY2F0ZTETMBEGA1UEAwwKMTIzNDU2Nzg5MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEI/SLrH6fITA9y6Y3BneuoT/5+EHSepZxCYeSstGll2sVvmSDZWWSbN6lh5Fb/zagrDjjQ/gZtWIOTf2wL1vSGjgbcwgbQwCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwIwHQYDVR0OBBYEFHuvP526vFMywEoVoXZ5aXNfhnfeMB8GA1UdIwQYMBaAFI+ZFhOWF+oMtcfYwg15vH5WmWccMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwuYWxwaGEtbWVyY2hhbnQuZXhhbXBsZS9TYW1wbGVFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSAAwRQIhAPuWWvCTmOdvQzUjCUmTX7H4sX4Ebpw+CI+aOQLu1DqwAiA0eR4FdMtvXV4P6+WMz5B10oea5xtLTfSgoBDoTkvKYQ==0002C4MIICDjCCAbOgAwIBAgIIfnOsCbsxHjwwCgYIKoZIzj0EAwIwNjEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxGzAZBgNVBAMMElNhbXBsZSBSb290IEVDQyBDQTAeFw0yMDA4MTUwMjEwMDlaFw0zMDA4MTMwMjEwMDlaMDExFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MRYwFAYDVQQDDA1TYW1wbGUgRUNDIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHCanM9n+Rji+3EROj+HlogmXMU1Fk1td7N3I/8rfFnre1GwWCUqXSePHxwQ9DRHCV3oht3OUU2kDfitfUIujA6OBrzCBrDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUj5kWE5YX6gy1x9jCDXm8flaZZxwwHwYDVR0jBBgwFoAUvElIifFlt6oeUaopV9Y0lJtyPVQwRgYDVR0fBD8wPTA7oDmgN4Y1aHR0cDovL2NybC5hbHBoYS1tZXJjaGFudC5leGFtcGxlL1NhbXBsZVJvb3RFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSQAwRgIhALT8+DG+++KuqqUGyBQ4YG4s34fqbujclxZTHxYWVVSNAiEAn3v5Xmct7fkLpkjGexiHsy6D90r0K2LlUqpN/069y5s=KP10012331550BC9TS1320200818004100ZPB11000000000000023806274FDDE312047FA37117320D914DD1CF20705A140E39FF88DF107110F26DDFDB20AD909B4C67987C76907C6518B63C8BB7969A52BA3EE6218C9B29F02C243D23E5DF5F87D4CBC0E587DD619F1F228D3F605316DC39DDD6E9D13BAB633D13A97BE7EF67DBEECADA32FA968E57BDF87EE5AEAA47CDCF427154AE66508B99EF6186011C7BE905F875B24C5D05EA14E
	)
	string(CONCAT tr31_tool_test36_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 1840 bytes[\r\n]"
		"Key usage: \\[S0\\] Asymmetric Key Pair for Digital Signature[\r\n]"
		"Key algorithm: \\[E\\] Elliptic Curve[\r\n]"
		"Key mode of use: \\[S\\] Signature Only[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[4\\]:[\r\n]"
		"\t\\[CT\\] Public Key Certificate: \"0002F0MIICLjCCAd.*K2LlUqpN/069y5s=\" \\(Certificate chain\\)[\r\n]"
		"\t\\[KP\\] Key Check Value \\(KCV\\) of KBPK: 2331550BC9 \\(CMAC based KCV\\)[\r\n]"
		"\t\\[TS\\] Time Stamp: \"20200818004100Z\" \\(.*\\)[\r\n]"
		"\t\\[PB\\] Padding Block: \"0000000000000\"[\r\n]"
		"Key length: 121[\r\n]"
		"Key value: 307702010104202D493257A45B34C11B6526A03DB4D8AE16EE87A0C16BDF1BE23C2DD8B164A2D3A00A06082A8648CE3D030107A14403420004423F48BAC7E9F21303DCBA6370677AEA13FF9F841D27A9671098792B2D1A5976B15BE64836565926CDEA587915BFF36A0AC38E343F819B5620E4DFDB02F5BD21[\r\n]"
	)
	set_tests_properties(tr31_tool_test36
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test36_regex}
	)

	add_test(NAME tr31_tool_test37
		COMMAND tr31-tool --kbpk FA36E44278DB3AB5F298F9F7DA8F1F88 --export 308204A40201000282010100D6C460FB012E8DEDF2D78574B451E9BF1C6963F7F2AE5741D2745CB410E7E00BE405FC89B832C6E7DBEA9065D577C27C610770107649AD5ABEEC1F2B8ED33A3CCA321FFED00196400BBB70EF8D0FE1C7DE9F522BCAE6D956F895F50529FA01D3A1E9597EBD6B7C8B2E106873A3A521C18EF49244BCEFFAD81C255AB616448CC9AF50811DA738343D9DBE1DE83A0F7E4E43BD08FA7A7E06C1107FBD59AFE77688AA95184779D25F2D6E7E16DC0E2B3B250444F4DA002C12F6BBDD17B9E5993A92239C9B37A9669B7EDAEF587BEE7E8CE7869AC362A4258595A3ED6CB544F2155B2FFD806CF5ACA56C11D0398AA9FD4DAD0744F1339F10606CF2696BCDA9B17339020301000102820101009A6193ED1ACE624BF7D2A1266130B8BC1E2A4C284214BCB89E15F345A519695E62CD42D9A4C52B62241D9B2AF8A61BF1D8B5C602AF650AEE3E6BF184182912A5FC1AC8111D68E69EA75058407AC03DE6B4CB060060DC4CC34DF24DAD269D868EA0C6E3044E1963EF906F4F06414E44D3A4757E67570192E9A261DFB12094AA36476582272EDAB0F56F816D9FA69580B3AB053237135BD1DDDB42AF77E11E1629F5A11B22C5E3E2DB3E8767A90B94414898DCCBB47EFE619F0620AC29C389FB464CE9C5E243963E13B6DA38EFAE1330AEFB54C0D5E2E59B6D7FBE4B3A22EE483F74E74D4A4A25978C65F4AC5829C34260930C85ECEA1FB24DB52A438D4EB2CF6102818100ED003DEEB8013AF4E4EBE172FE474B23FE20128805840C2D277E3E308D5B44527F1ED33C07AF350D5B22B27E082CD101DD2DE54DC8DF8F91D4BA5768EB9EC5F27DB5D358EA5E0DEE08A535677CB3F765789C9DAE56B7421B9E54525EF928AB2885BF098E837999AD0CA3CA6AC642EA9AD1331856B0CCEE5DF01FED1B2F63C3A502818100E7FBDA0A71C926DD51F037206D901A297554A39BBC9239794421F1F54D29766E50E016CA5701BDA79AEC543F5066B3730E053EA4B5872D25C29673CA8457B07390D11AF23F2247A1133FC2522B96CB02DA77D927FEE6661066058D1A4D85FE3C1D3418542F24B3982B4DDFB4192E512EDA1BAAAA59955B50945DD083E26E4D0502818002D4E0E88C3C3F87138119F574C2474C8BC9B84EF5B9E92754F4762BC05499D15E8170C6A3D4DD0E66CB5854972669ECDAC6A499B44FAF786F91366023888716E9979589D76AFE419CCAD4838302E76EC7ED1F1929221161211822CFCDAC45B73B39D81462CFBE1D4A2C5ECBBDC8A8E2E6A2F4A47C82464ACB06A69F8F86629D0281804E98A99AF84A2A7CB992255B3B43A3598083189B5F1C3B94B65CB9D95E373A04CE29DE0ED7C3A339F1E737F3EB8DA026CF0D3FD81618A25734C23CA0D48DD11E9666023728E4B857FE698FB0BF4BEBA41FD8931E55E2419A34B694C3E0981136D4BE1DB007F8EB5016FBDF5AE95D23EC37C13FE54F4CA70F79F4FEFC6FEEE6F1028181008321C2F1E8914C0AE09C418ACFEBB8A7B86A1E7144182F5145FBA90AF104DE3BC7604D86A831AC2F38DA356C99BC60BEA80E26EC8B7FAF8BB84A8661EF564BDC65DA0519F5E3CE81FF491CC71DA0813960048B225E61C56684D3CE01AE28A212C9ACCE946E2AAB80ADD51B00093029C5D52E9AF6C8A3EB861641B00E23636A68 --export-header D0000S0RS00N0000 --export-opt-block-CT-X509 MIIDszCCApugAwIBAgIIKpD5FKMfCZEwDQYJKoZIhvcNAQELBQAwLTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxEjAQBgNVBAMMCVNhbXBsZSBDQTAeFw0yMDA4MTUwMjE0MTBaFw0yMTA4MTUwMjE0MTBaME8xFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MR8wHQYDVQQLDBZUTFMgQ2xpZW50IENlcnRpZmljYXRlMRMwEQYDVQQDDAoxMjM0NTY3ODkwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1sRg+wEuje3y14V0tFHpvxxpY/fyrldB0nRctBDn4AvkBfyJuDLG59vqkGXVd8J8YQdwEHZJrVq+7B8rjtM6PMoyH/7QAZZAC7tw740P4cfen1IryubZVviV9QUp+gHToelZfr1rfIsuEGhzo6UhwY70kkS87/rYHCVathZEjMmvUIEdpzg0PZ2+Heg6D35OQ70I+np+BsEQf71Zr+d2iKqVGEd50l8tbn4W3A4rOyUERPTaACwS9rvdF7nlmTqSI5ybN6lmm37a71h77n6M54aaw2KkJYWVo+1stUTyFVsv/YBs9aylbBHQOYqp/U2tB0TxM58QYGzyaWvNqbFzOQIDAQABo4G0MIGxMAkGA1UdEwQCMAAwDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMCMB0GA1UdDgQWBBR837QRAGx5uL9xDnRjr9L9WSBSlzAfBgNVHSMEGDAWgBSlXhVYy9bic9OLnRsxsFgKQQbLmTA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vY3JsLmFscGhhLW1lcmNoYW50LmV4YW1wbGUvU2FtcGxlQ0EuY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQCH6JusIBSkRDqzAohaSoJVAEwQGMdcUSQWDfMyJjZqkOep1kT8Sl7LolFmmmVRJdkTWZe4PxBfQUc/eIql9BIx90506B+j9aoVA7212OExAid78GgqKA6JoalhYQKRta9ixY8iolydTYyEYpegA1jFZavMQma4ZGwX/bDJWr4+cJYxJXWaf67g4AMqHaWC8J60MVjrrBe9BZ0ZstuIlNkktQUOZanqxqsrFeqz02ibwTwNHtaHQCztB4KgdTkrTNahkqeq6xjafDoTllNo1EddajnbA/cVzF9ZCNigDtg5chXHWIQbgEK7HmU3sY3/wd2Bh1KdF3+vpN+5iZMRNv7Z --export-opt-block-KP --export-opt-block-TS 20200818221218Z
	)
	set_tests_properties(tr31_tool_test37
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D3776S0RS00N0400CT0004050000MIIDszCCApugAwIBAgIIKpD5FKMfCZEwDQYJKoZIhvcNAQELBQAwLTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxEjAQBgNVBAMMCVNhbXBsZSBDQTAeFw0yMDA4MTUwMjE0MTBaFw0yMTA4MTUwMjE0MTBaME8xFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MR8wHQYDVQQLDBZUTFMgQ2xpZW50IENlcnRpZmljYXRlMRMwEQYDVQQDDAoxMjM0NTY3ODkwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1sRg\\+wEuje3y14V0tFHpvxxpY/fyrldB0nRctBDn4AvkBfyJuDLG59vqkGXVd8J8YQdwEHZJrVq\\+7B8rjtM6PMoyH/7QAZZAC7tw740P4cfen1IryubZVviV9QUp\\+gHToelZfr1rfIsuEGhzo6UhwY70kkS87/rYHCVathZEjMmvUIEdpzg0PZ2\\+Heg6D35OQ70I\\+np\\+BsEQf71Zr\\+d2iKqVGEd50l8tbn4W3A4rOyUERPTaACwS9rvdF7nlmTqSI5ybN6lmm37a71h77n6M54aaw2KkJYWVo\\+1stUTyFVsv/YBs9aylbBHQOYqp/U2tB0TxM58QYGzyaWvNqbFzOQIDAQABo4G0MIGxMAkGA1UdEwQCMAAwDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMCMB0GA1UdDgQWBBR837QRAGx5uL9xDnRjr9L9WSBSlzAfBgNVHSMEGDAWgBSlXhVYy9bic9OLnRsxsFgKQQbLmTA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vY3JsLmFscGhhLW1lcmNoYW50LmV4YW1wbGUvU2FtcGxlQ0EuY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQCH6JusIBSkRDqzAohaSoJVAEwQGMdcUSQWDfMyJjZqkOep1kT8Sl7LolFmmmVRJdkTWZe4PxBfQUc/eIql9BIx90506B\\+j9aoVA7212OExAid78GgqKA6JoalhYQKRta9ixY8iolydTYyEYpegA1jFZavMQma4ZGwX/bDJWr4\\+cJYxJXWaf67g4AMqHaWC8J60MVjrrBe9BZ0ZstuIlNkktQUOZanqxqsrFeqz02ibwTwNHtaHQCztB4KgdTkrTNahkqeq6xjafDoTllNo1EddajnbA/cVzF9ZCNigDtg5chXHWIQbgEK7HmU3sY3/wd2Bh1KdF3\\+vpN\\+5iZMRNv7ZKP1001D77F007724TS1320200818221218ZPB0D"
	)

	add_test(NAME tr31_tool_test38
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 307702010104202D493257A45B34C11B6526A03DB4D8AE16EE87A0C16BDF1BE23C2DD8B164A2D3A00A06082A8648CE3D030107A14403420004423F48BAC7E9F21303DCBA6370677AEA13FF9F841D27A9671098792B2D1A5976B15BE64836565926CDEA587915BFF36A0AC38E343F819B5620E4DFDB02F5BD21 --export-header D0000S0ES00N0000 --export-opt-block-CT-X509 MIICLjCCAdSgAwIBAgIIGDrdWBxuNpAwCgYIKoZIzj0EAwIwMTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxFjAUBgNVBAMMDVNhbXBsZSBFQ0MgQ0EwHhcNMjAwODE1MDIxMDEwWhcNMjEwODE1MDIxMDEwWjBPMRcwFQYDVQQKDA5BbHBoYSBNZXJjaGFudDEfMB0GA1UECwwWVExTIENsaWVudCBDZXJ0aWZpY2F0ZTETMBEGA1UEAwwKMTIzNDU2Nzg5MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEI/SLrH6fITA9y6Y3BneuoT/5+EHSepZxCYeSstGll2sVvmSDZWWSbN6lh5Fb/zagrDjjQ/gZtWIOTf2wL1vSGjgbcwgbQwCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwIwHQYDVR0OBBYEFHuvP526vFMywEoVoXZ5aXNfhnfeMB8GA1UdIwQYMBaAFI+ZFhOWF+oMtcfYwg15vH5WmWccMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwuYWxwaGEtbWVyY2hhbnQuZXhhbXBsZS9TYW1wbGVFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSAAwRQIhAPuWWvCTmOdvQzUjCUmTX7H4sX4Ebpw+CI+aOQLu1DqwAiA0eR4FdMtvXV4P6+WMz5B10oea5xtLTfSgoBDoTkvKYQ== --export-opt-block-CT-X509 MIICDjCCAbOgAwIBAgIIfnOsCbsxHjwwCgYIKoZIzj0EAwIwNjEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxGzAZBgNVBAMMElNhbXBsZSBSb290IEVDQyBDQTAeFw0yMDA4MTUwMjEwMDlaFw0zMDA4MTMwMjEwMDlaMDExFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MRYwFAYDVQQDDA1TYW1wbGUgRUNDIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHCanM9n+Rji+3EROj+HlogmXMU1Fk1td7N3I/8rfFnre1GwWCUqXSePHxwQ9DRHCV3oht3OUU2kDfitfUIujA6OBrzCBrDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUj5kWE5YX6gy1x9jCDXm8flaZZxwwHwYDVR0jBBgwFoAUvElIifFlt6oeUaopV9Y0lJtyPVQwRgYDVR0fBD8wPTA7oDmgN4Y1aHR0cDovL2NybC5hbHBoYS1tZXJjaGFudC5leGFtcGxlL1NhbXBsZVJvb3RFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSQAwRgIhALT8+DG+++KuqqUGyBQ4YG4s34fqbujclxZTHxYWVVSNAiEAn3v5Xmct7fkLpkjGexiHsy6D90r0K2LlUqpN/069y5s= --export-opt-block-KP --export-opt-block-TS 20200818004100Z
	)
	set_tests_properties(tr31_tool_test38
		PROPERTIES
			PASS_REGULAR_EXPRESSION "D1840S0ES00N0400CT000405CC020002F0MIICLjCCAdSgAwIBAgIIGDrdWBxuNpAwCgYIKoZIzj0EAwIwMTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxFjAUBgNVBAMMDVNhbXBsZSBFQ0MgQ0EwHhcNMjAwODE1MDIxMDEwWhcNMjEwODE1MDIxMDEwWjBPMRcwFQYDVQQKDA5BbHBoYSBNZXJjaGFudDEfMB0GA1UECwwWVExTIENsaWVudCBDZXJ0aWZpY2F0ZTETMBEGA1UEAwwKMTIzNDU2Nzg5MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEI/SLrH6fITA9y6Y3BneuoT/5\\+EHSepZxCYeSstGll2sVvmSDZWWSbN6lh5Fb/zagrDjjQ/gZtWIOTf2wL1vSGjgbcwgbQwCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwIwHQYDVR0OBBYEFHuvP526vFMywEoVoXZ5aXNfhnfeMB8GA1UdIwQYMBaAFI\\+ZFhOWF\\+oMtcfYwg15vH5WmWccMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwuYWxwaGEtbWVyY2hhbnQuZXhhbXBsZS9TYW1wbGVFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSAAwRQIhAPuWWvCTmOdvQzUjCUmTX7H4sX4Ebpw\\+CI\\+aOQLu1DqwAiA0eR4FdMtvXV4P6\\+WMz5B10oea5xtLTfSgoBDoTkvKYQ==0002C4MIICDjCCAbOgAwIBAgIIfnOsCbsxHjwwCgYIKoZIzj0EAwIwNjEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxGzAZBgNVBAMMElNhbXBsZSBSb290IEVDQyBDQTAeFw0yMDA4MTUwMjEwMDlaFw0zMDA4MTMwMjEwMDlaMDExFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MRYwFAYDVQQDDA1TYW1wbGUgRUNDIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHCanM9n\\+Rji\\+3EROj\\+HlogmXMU1Fk1td7N3I/8rfFnre1GwWCUqXSePHxwQ9DRHCV3oht3OUU2kDfitfUIujA6OBrzCBrDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUj5kWE5YX6gy1x9jCDXm8flaZZxwwHwYDVR0jBBgwFoAUvElIifFlt6oeUaopV9Y0lJtyPVQwRgYDVR0fBD8wPTA7oDmgN4Y1aHR0cDovL2NybC5hbHBoYS1tZXJjaGFudC5leGFtcGxlL1NhbXBsZVJvb3RFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSQAwRgIhALT8\\+DG\\+\\+\\+KuqqUGyBQ4YG4s34fqbujclxZTHxYWVVSNAiEAn3v5Xmct7fkLpkjGexiHsy6D90r0K2LlUqpN/069y5s=KP10012331550BC9TS1320200818004100ZPB11"
	)

	add_test(NAME tr31_tool_test39
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 307702010104202D493257A45B34C11B6526A03DB4D8AE16EE87A0C16BDF1BE23C2DD8B164A2D3A00A06082A8648CE3D030107A14403420004423F48BAC7E9F21303DCBA6370677AEA13FF9F841D27A9671098792B2D1A5976B15BE64836565926CDEA587915BFF36A0AC38E343F819B5620E4DFDB02F5BD21 --export-header D0000S0ES00N0000 --export-opt-block-CT-X509 MIICLjCCAdSgAwIBAgIIGDrdWBxuNpAwCgYIKoZIzj0EAwIwMTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxFjAUBgNVBAMMDVNhbXBsZSBFQ0MgQ0EwHhcNMjAwODE1MDIxMDEwWhcNMjEwODE1MDIxMDEwWjBPMRcwFQYDVQQKDA5BbHBoYSBNZXJjaGFudDEfMB0GA1UECwwWVExTIENsaWVudCBDZXJ0aWZpY2F0ZTETMBEGA1UEAwwKMTIzNDU2Nzg5MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEI/SLrH6fITA9y6Y3BneuoT/5+EHSepZxCYeSstGll2sVvmSDZWWSbN6lh5Fb/zagrDjjQ/gZtWIOTf2wL1vSGjgbcwgbQwCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwIwHQYDVR0OBBYEFHuvP526vFMywEoVoXZ5aXNfhnfeMB8GA1UdIwQYMBaAFI+ZFhOWF+oMtcfYwg15vH5WmWccMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwuYWxwaGEtbWVyY2hhbnQuZXhhbXBsZS9TYW1wbGVFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSAAwRQIhAPuWWvCTmOdvQzUjCUmTX7H4sX4Ebpw+CI+aOQLu1DqwAiA0eR4FdMtvXV4P6+WMz5B10oea5xtLTfSgoBDoTkvKYQ== --export-opt-block-CT-X509 MIICDjCCAbOgAwIBAgIIfnOsCbsxHjwwCgYIKoZIzj0EAwIwNjEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxGzAZBgNVBAMMElNhbXBsZSBSb290IEVDQyBDQTAeFw0yMDA4MTUwMjEwMDlaFw0zMDA4MTMwMjEwMDlaMDExFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MRYwFAYDVQQDDA1TYW1wbGUgRUNDIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHCanM9n+Rji+3EROj+HlogmXMU1Fk1td7N3I/8rfFnre1GwWCUqXSePHxwQ9DRHCV3oht3OUU2kDfitfUIujA6OBrzCBrDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUj5kWE5YX6gy1x9jCDXm8flaZZxwwHwYDVR0jBBgwFoAUvElIifFlt6oeUaopV9Y0lJtyPVQwRgYDVR0fBD8wPTA7oDmgN4Y1aHR0cDovL2NybC5hbHBoYS1tZXJjaGFudC5leGFtcGxlL1NhbXBsZVJvb3RFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSQAwRgIhALT8+DG+++KuqqUGyBQ4YG4s34fqbujclxZTHxYWVVSNAiEAn3v5Xmct7fkLpkjGexiHsy6D90r0K2LlUqpN/069y5s= --export-opt-block-CT-EMV asdf --export-opt-block-KP --export-opt-block-TS 20200818004100Z
	)
	set_tests_properties(tr31_tool_test39
		PROPERTIES
			PASS_REGULAR_EXPRESSION "D1840S0ES00N0400CT000405D6020002F0MIICLjCCAdSgAwIBAgIIGDrdWBxuNpAwCgYIKoZIzj0EAwIwMTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxFjAUBgNVBAMMDVNhbXBsZSBFQ0MgQ0EwHhcNMjAwODE1MDIxMDEwWhcNMjEwODE1MDIxMDEwWjBPMRcwFQYDVQQKDA5BbHBoYSBNZXJjaGFudDEfMB0GA1UECwwWVExTIENsaWVudCBDZXJ0aWZpY2F0ZTETMBEGA1UEAwwKMTIzNDU2Nzg5MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEI/SLrH6fITA9y6Y3BneuoT/5\\+EHSepZxCYeSstGll2sVvmSDZWWSbN6lh5Fb/zagrDjjQ/gZtWIOTf2wL1vSGjgbcwgbQwCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwIwHQYDVR0OBBYEFHuvP526vFMywEoVoXZ5aXNfhnfeMB8GA1UdIwQYMBaAFI\\+ZFhOWF\\+oMtcfYwg15vH5WmWccMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwuYWxwaGEtbWVyY2hhbnQuZXhhbXBsZS9TYW1wbGVFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSAAwRQIhAPuWWvCTmOdvQzUjCUmTX7H4sX4Ebpw\\+CI\\+aOQLu1DqwAiA0eR4FdMtvXV4P6\\+WMz5B10oea5xtLTfSgoBDoTkvKYQ==0002C4MIICDjCCAbOgAwIBAgIIfnOsCbsxHjwwCgYIKoZIzj0EAwIwNjEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxGzAZBgNVBAMMElNhbXBsZSBSb290IEVDQyBDQTAeFw0yMDA4MTUwMjEwMDlaFw0zMDA4MTMwMjEwMDlaMDExFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MRYwFAYDVQQDDA1TYW1wbGUgRUNDIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHCanM9n\\+Rji\\+3EROj\\+HlogmXMU1Fk1td7N3I/8rfFnre1GwWCUqXSePHxwQ9DRHCV3oht3OUU2kDfitfUIujA6OBrzCBrDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUj5kWE5YX6gy1x9jCDXm8flaZZxwwHwYDVR0jBBgwFoAUvElIifFlt6oeUaopV9Y0lJtyPVQwRgYDVR0fBD8wPTA7oDmgN4Y1aHR0cDovL2NybC5hbHBoYS1tZXJjaGFudC5leGFtcGxlL1NhbXBsZVJvb3RFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSQAwRgIhALT8\\+DG\\+\\+\\+KuqqUGyBQ4YG4s34fqbujclxZTHxYWVVSNAiEAn3v5Xmct7fkLpkjGexiHsy6D90r0K2LlUqpN/069y5s=010004asdfKP10012331550BC9TS1320200818004100ZPB07"
	)

	add_test(NAME tr31_tool_test40
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 307702010104202D493257A45B34C11B6526A03DB4D8AE16EE87A0C16BDF1BE23C2DD8B164A2D3A00A06082A8648CE3D030107A14403420004423F48BAC7E9F21303DCBA6370677AEA13FF9F841D27A9671098792B2D1A5976B15BE64836565926CDEA587915BFF36A0AC38E343F819B5620E4DFDB02F5BD21 --export-header D0000S0ES00N0000 --export-opt-block-CT-X509 MIICLjCCAdSgAwIBAgIIGDrdWBxuNpAwCgYIKoZIzj0EAwIwMTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxFjAUBgNVBAMMDVNhbXBsZSBFQ0MgQ0EwHhcNMjAwODE1MDIxMDEwWhcNMjEwODE1MDIxMDEwWjBPMRcwFQYDVQQKDA5BbHBoYSBNZXJjaGFudDEfMB0GA1UECwwWVExTIENsaWVudCBDZXJ0aWZpY2F0ZTETMBEGA1UEAwwKMTIzNDU2Nzg5MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEI/SLrH6fITA9y6Y3BneuoT/5+EHSepZxCYeSstGll2sVvmSDZWWSbN6lh5Fb/zagrDjjQ/gZtWIOTf2wL1vSGjgbcwgbQwCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwIwHQYDVR0OBBYEFHuvP526vFMywEoVoXZ5aXNfhnfeMB8GA1UdIwQYMBaAFI+ZFhOWF+oMtcfYwg15vH5WmWccMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwuYWxwaGEtbWVyY2hhbnQuZXhhbXBsZS9TYW1wbGVFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSAAwRQIhAPuWWvCTmOdvQzUjCUmTX7H4sX4Ebpw+CI+aOQLu1DqwAiA0eR4FdMtvXV4P6+WMz5B10oea5xtLTfSgoBDoTkvKYQ== --export-opt-block-CT-X509 MIICDjCCAbOgAwIBAgIIfnOsCbsxHjwwCgYIKoZIzj0EAwIwNjEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxGzAZBgNVBAMMElNhbXBsZSBSb290IEVDQyBDQTAeFw0yMDA4MTUwMjEwMDlaFw0zMDA4MTMwMjEwMDlaMDExFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MRYwFAYDVQQDDA1TYW1wbGUgRUNDIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHCanM9n+Rji+3EROj+HlogmXMU1Fk1td7N3I/8rfFnre1GwWCUqXSePHxwQ9DRHCV3oht3OUU2kDfitfUIujA6OBrzCBrDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUj5kWE5YX6gy1x9jCDXm8flaZZxwwHwYDVR0jBBgwFoAUvElIifFlt6oeUaopV9Y0lJtyPVQwRgYDVR0fBD8wPTA7oDmgN4Y1aHR0cDovL2NybC5hbHBoYS1tZXJjaGFudC5leGFtcGxlL1NhbXBsZVJvb3RFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSQAwRgIhALT8+DG+++KuqqUGyBQ4YG4s34fqbujclxZTHxYWVVSNAiEAn3v5Xmct7fkLpkjGexiHsy6D90r0K2LlUqpN/069y5s= --export-opt-block-AL Static --export-opt-block-KP --export-opt-block-TS 20200818004100Z
	)
	set_tests_properties(tr31_tool_test40
		PROPERTIES
			PASS_REGULAR_EXPRESSION "D1840S0ES00N0500AL080101CT000405CC020002F0MIICLjCCAdSgAwIBAgIIGDrdWBxuNpAwCgYIKoZIzj0EAwIwMTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxFjAUBgNVBAMMDVNhbXBsZSBFQ0MgQ0EwHhcNMjAwODE1MDIxMDEwWhcNMjEwODE1MDIxMDEwWjBPMRcwFQYDVQQKDA5BbHBoYSBNZXJjaGFudDEfMB0GA1UECwwWVExTIENsaWVudCBDZXJ0aWZpY2F0ZTETMBEGA1UEAwwKMTIzNDU2Nzg5MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEI/SLrH6fITA9y6Y3BneuoT/5\\+EHSepZxCYeSstGll2sVvmSDZWWSbN6lh5Fb/zagrDjjQ/gZtWIOTf2wL1vSGjgbcwgbQwCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwIwHQYDVR0OBBYEFHuvP526vFMywEoVoXZ5aXNfhnfeMB8GA1UdIwQYMBaAFI\\+ZFhOWF\\+oMtcfYwg15vH5WmWccMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwuYWxwaGEtbWVyY2hhbnQuZXhhbXBsZS9TYW1wbGVFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSAAwRQIhAPuWWvCTmOdvQzUjCUmTX7H4sX4Ebpw\\+CI\\+aOQLu1DqwAiA0eR4FdMtvXV4P6\\+WMz5B10oea5xtLTfSgoBDoTkvKYQ==0002C4MIICDjCCAbOgAwIBAgIIfnOsCbsxHjwwCgYIKoZIzj0EAwIwNjEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxGzAZBgNVBAMMElNhbXBsZSBSb290IEVDQyBDQTAeFw0yMDA4MTUwMjEwMDlaFw0zMDA4MTMwMjEwMDlaMDExFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MRYwFAYDVQQDDA1TYW1wbGUgRUNDIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHCanM9n\\+Rji\\+3EROj\\+HlogmXMU1Fk1td7N3I/8rfFnre1GwWCUqXSePHxwQ9DRHCV3oht3OUU2kDfitfUIujA6OBrzCBrDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUj5kWE5YX6gy1x9jCDXm8flaZZxwwHwYDVR0jBBgwFoAUvElIifFlt6oeUaopV9Y0lJtyPVQwRgYDVR0fBD8wPTA7oDmgN4Y1aHR0cDovL2NybC5hbHBoYS1tZXJjaGFudC5leGFtcGxlL1NhbXBsZVJvb3RFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSQAwRgIhALT8\\+DG\\+\\+\\+KuqqUGyBQ4YG4s34fqbujclxZTHxYWVVSNAiEAn3v5Xmct7fkLpkjGexiHsy6D90r0K2LlUqpN/069y5s=KP10012331550BC9TS1320200818004100ZPB09"
	)

	add_test(NAME tr31_tool_test41
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --import D1840S0ES00N0500AL080101CT000405CC020002F0MIICLjCCAdSgAwIBAgIIGDrdWBxuNpAwCgYIKoZIzj0EAwIwMTEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxFjAUBgNVBAMMDVNhbXBsZSBFQ0MgQ0EwHhcNMjAwODE1MDIxMDEwWhcNMjEwODE1MDIxMDEwWjBPMRcwFQYDVQQKDA5BbHBoYSBNZXJjaGFudDEfMB0GA1UECwwWVExTIENsaWVudCBDZXJ0aWZpY2F0ZTETMBEGA1UEAwwKMTIzNDU2Nzg5MDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEI/SLrH6fITA9y6Y3BneuoT/5+EHSepZxCYeSstGll2sVvmSDZWWSbN6lh5Fb/zagrDjjQ/gZtWIOTf2wL1vSGjgbcwgbQwCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwIwHQYDVR0OBBYEFHuvP526vFMywEoVoXZ5aXNfhnfeMB8GA1UdIwQYMBaAFI+ZFhOWF+oMtcfYwg15vH5WmWccMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwuYWxwaGEtbWVyY2hhbnQuZXhhbXBsZS9TYW1wbGVFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSAAwRQIhAPuWWvCTmOdvQzUjCUmTX7H4sX4Ebpw+CI+aOQLu1DqwAiA0eR4FdMtvXV4P6+WMz5B10oea5xtLTfSgoBDoTkvKYQ==0002C4MIICDjCCAbOgAwIBAgIIfnOsCbsxHjwwCgYIKoZIzj0EAwIwNjEXMBUGA1UECgwOQWxwaGEgTWVyY2hhbnQxGzAZBgNVBAMMElNhbXBsZSBSb290IEVDQyBDQTAeFw0yMDA4MTUwMjEwMDlaFw0zMDA4MTMwMjEwMDlaMDExFzAVBgNVBAoMDkFscGhhIE1lcmNoYW50MRYwFAYDVQQDDA1TYW1wbGUgRUNDIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHCanM9n+Rji+3EROj+HlogmXMU1Fk1td7N3I/8rfFnre1GwWCUqXSePHxwQ9DRHCV3oht3OUU2kDfitfUIujA6OBrzCBrDASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUj5kWE5YX6gy1x9jCDXm8flaZZxwwHwYDVR0jBBgwFoAUvElIifFlt6oeUaopV9Y0lJtyPVQwRgYDVR0fBD8wPTA7oDmgN4Y1aHR0cDovL2NybC5hbHBoYS1tZXJjaGFudC5leGFtcGxlL1NhbXBsZVJvb3RFQ0NDQS5jcmwwCgYIKoZIzj0EAwIDSQAwRgIhALT8+DG+++KuqqUGyBQ4YG4s34fqbujclxZTHxYWVVSNAiEAn3v5Xmct7fkLpkjGexiHsy6D90r0K2LlUqpN/069y5s=KP10012331550BC9TS1320200818004100ZPB09sdn0r87F8D19404F51B470264BC5416127DEBC355E91729D2AD368403E62E12EBFC1A5DEF8A8D997CF009CD93F31B5A0854BD68BC33BF1CA39C1855C8039CA341D64E3BDEABF3CF0B89907F4FA8E65635ACF7C72025BB35787D13C170A1525CEF8B6A113CF4C58CD547C41445DC28CB0F781287025577A9530029F93840AC1AD7C85417993909995939D1868E780B1A76FAC8
	)
	string(CONCAT tr31_tool_test41_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 1840 bytes[\r\n]"
		"Key usage: \\[S0\\] Asymmetric Key Pair for Digital Signature[\r\n]"
		"Key algorithm: \\[E\\] Elliptic Curve[\r\n]"
		"Key mode of use: \\[S\\] Signature Only[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[5\\]:[\r\n]"
		"\t\\[AL\\] Asymmetric Key Life \\(AKL\\): v1, 01 \\(Static\\)[\r\n]"
		"\t\\[CT\\] Public Key Certificate: \"0002F0MIICLjCCAd.*K2LlUqpN/069y5s=\" \\(Certificate chain\\)[\r\n]"
		"\t\\[KP\\] Key Check Value \\(KCV\\) of KBPK: 2331550BC9 \\(CMAC based KCV\\)[\r\n]"
		"\t\\[TS\\] Time Stamp: \"20200818004100Z\" \\(.*\\)[\r\n]"
		"\t\\[PB\\] Padding Block: \"sdn0r\"[\r\n]"
		"Key length: 121[\r\n]"
		"Key value: 307702010104202D493257A45B34C11B6526A03DB4D8AE16EE87A0C16BDF1BE23C2DD8B164A2D3A00A06082A8648CE3D030107A14403420004423F48BAC7E9F21303DCBA6370677AEA13FF9F841D27A9671098792B2D1A5976B15BE64836565926CDEA587915BFF36A0AC38E343F819B5620E4DFDB02F5BD21[\r\n]"
	)
	set_tests_properties(tr31_tool_test41
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test41_regex}
	)

	# test export header containing optional blocks and padding, but not adding additional optional blocks
	add_test(NAME tr31_tool_test42
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-header D1234M7HG00N0200HM0621PB0A5V5E8F
	)
	set_tests_properties(tr31_tool_test42
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0128M7HG00N0200HM0621PB0A5V5E8F" # note that optional block padding content is intentionally preserved
	)

	# test export header containing optional blocks and padding and also adding additional optional blocks
	add_test(NAME tr31_tool_test43
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-header D1234M7HG00N0200HM0621PB0A5V5E8F --export-opt-block-LB "MyKey"
	)
	set_tests_properties(tr31_tool_test43
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0144M7HG00N0300HM0621LB09MyKeyPB11"
	)

	# test export header containing optional blocks but insufficient padding
	add_test(NAME tr31_tool_test44
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-header D1234M7HG00N0100HM0621
	)
	set_tests_properties(tr31_tool_test44
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0128M7HG00N0200HM0621PB0A"
	)

	# test --import-no-strict-validation with non-standard mode of use
	add_test(NAME tr31_tool_test45
		COMMAND tr31-tool --import "B0128B1T900N0300KC0C000169E3KP0C00ECAD62KS18FFFF00A0200001E0000030EFDCB3A740B46D5BA7896587151A41E3D746CF063D0FC2D3FA45B851D06A43" --kbpk AB2E09DB3EF0BA71E0CE6CD755C23A3B --import-no-strict-validation
	)
	string(CONCAT tr31_tool_test45_regex
		"^Key block format version: B[\r\n]"
		"Key block length: 128 bytes[\r\n]"
		"Key usage: \\[B1\\] Initial DUKPT Key \\(IK/IPEK\\)[\r\n]"
		"Key algorithm: \\[T\\] TDES[\r\n]"
		"Key mode of use: \\[9\\] Unknown key mode of use value[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[3\\]:[\r\n]"
		"\t\\[KC\\] Key Check Value \\(KCV\\) of wrapped key: 0169E3 \\(Legacy KCV algorithm\\)[\r\n]"
		"\t\\[KP\\] Key Check Value \\(KCV\\) of KBPK: ECAD62 \\(Legacy KCV algorithm\\)[\r\n]"
		"\t\\[KS\\] Initial Key Serial Number \\(KSN\\): FFFF00A0200001E00000[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: BF82DAC6A33DF92CE66E15B70E5DCEB6 \\(KCV: 0169E3\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test45
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test45_regex}
	)

	# test --import-no-strict-validation with non-standard optional block KS
	add_test(NAME tr31_tool_test46
		COMMAND tr31-tool --import "B0120B1TX00N0300KS10DE#GBIC#OPT1KC0C000169E3KP0C00ECAD627E13D36248CFF4CA9D2F880E2401B3727F96C2D92E5FDCA0D932A6DA80CAE8B9" --kbpk AB2E09DB3EF0BA71E0CE6CD755C23A3B --import-no-strict-validation
	)
	string(CONCAT tr31_tool_test46_regex
		"^Key block format version: B[\r\n]"
		"Key block length: 120 bytes[\r\n]"
		"Key usage: \\[B1\\] Initial DUKPT Key \\(IK/IPEK\\)[\r\n]"
		"Key algorithm: \\[T\\] TDES[\r\n]"
		"Key mode of use: \\[X\\] Key Derivation[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[3\\]:[\r\n]"
		"\t\\[KS\\] Initial Key Serial Number \\(KSN\\): DE#GBIC#OPT1[\r\n]"
		"\t\\[KC\\] Key Check Value \\(KCV\\) of wrapped key: 0169E3 \\(Legacy KCV algorithm\\)[\r\n]"
		"\t\\[KP\\] Key Check Value \\(KCV\\) of KBPK: ECAD62 \\(Legacy KCV algorithm\\)[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: BF82DAC6A33DF92CE66E15B70E5DCEB6 \\(KCV: 0169E3\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test46
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test46_regex}
	)

	# test --export-opt-block with non-standard optional block KS
	add_test(NAME tr31_tool_test47
		COMMAND tr31-tool --kbpk 1D22BF32387C600AD97F9B97A51311AC --export E8BC63E5479455E26577F715D587FE68 --export-header "B0000B1TX00N0100LB0FProprietary" --export-opt-block "KS10DE#GBIC#OPT1"
	)
	set_tests_properties(tr31_tool_test47
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^B0136B1TX00N0300LB0FProprietaryKS10DE#GBIC#OPT1PB09"
	)

	# test --export-header with non-standard key usage
	add_test(NAME tr31_tool_test48
		COMMAND tr31-tool --kbpk 1D22BF32387C600AD97F9B97A51311AC --export E8BC63E5479455E26577F715D587FE68 --export-header "B000099TX00N0100LB0FProprietary"
	)
	set_tests_properties(tr31_tool_test48
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^B012099TX00N0200LB0FProprietaryPB09"
	)

	# test --import with non-zero key context
	add_test(NAME tr31_tool_test49
		COMMAND tr31-tool --import "B0096B1TX00N002042D72C7FF16FC1A9B1F9488AAAB27AEFDA96AA79D247071CD64F1CAA898006E8C03DFBF0EAC064D0" --kbpk AB2E09DB3EF0BA71E0CE6CD755C23A3B
	)
	string(CONCAT tr31_tool_test49_regex
		"^Key block format version: B[\r\n]"
		"Key block length: 96 bytes[\r\n]"
		"Key usage: \\[B1\\] Initial DUKPT Key \\(IK/IPEK\\)[\r\n]"
		"Key algorithm: \\[T\\] TDES[\r\n]"
		"Key mode of use: \\[X\\] Key Derivation[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[2\\] Key exchange context only[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: BF82DAC6A33DF92CE66E15B70E5DCEB6 \\(KCV: 0169E3\\)[\r\n]"
	)
	set_tests_properties(tr31_tool_test49
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test49_regex}
	)

	# test --export with non-zero key context
	add_test(NAME tr31_tool_test50
		COMMAND tr31-tool --kbpk AB2E09DB3EF0BA71E0CE6CD755C23A3B --export BF82DAC6A33DF92CE66E15B70E5DCEB6 --export-header "B0000B1TX00N0020"
	)
	set_tests_properties(tr31_tool_test50
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^B0096B1TX00N0020[A-Z0-9]*[\r\n]"
	)

	# test HMAC key ISO 20038
	add_test(NAME tr31_tool_test51
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --export 3F419E1CB7079442AA37474C2EFBF8B8 --export-header D0000M7JG00N0000
	)
	set_tests_properties(tr31_tool_test51
		PROPERTIES
			PASS_REGULAR_EXPRESSION "^D0112M7JG00N0000"
	)

	# test HMAC key ISO 20038
	add_test(NAME tr31_tool_test52
		COMMAND tr31-tool --kbpk 88E1AB2A2E3DD38C1FA039A536500CC8A87AB9D62DC92C01058FA79F44657DE6 --import D0112M7HG00N00000AD79E1883C16BCF2C980A087A348173A8F1326B9B1F6239738773BAA348FBFD0C0EC5AFD14A1A4BE2C4444215F2B823
	)
	string(CONCAT tr31_tool_test52_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 112 bytes[\r\n]"
		"Key usage: \\[M7\\] HMAC Key[\r\n]"
		"Key algorithm: \\[H\\] HMAC-SHA-1 \\(ISO 20038\\)[\r\n]"
		"Key mode of use: \\[G\\] MAC Generate Only[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Key length: 16[\r\n]"
		"Key value: 3F419E1CB7079442AA37474C2EFBF8B8[\r\n]"
	)
	set_tests_properties(tr31_tool_test52
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test52_regex}
	)

	# test IBM proprietary key block
	# NOTE: the input was hand crafted based on https://www.ibm.com/docs/en/zos/3.2.0?topic=ktf-x9143-tr-31-key-block-header-optional-block-data and https://www.ibm.com/docs/en/linux-on-systems?topic=data-tr-31-optional-block
	add_test(NAME tr31_tool_test53
		COMMAND tr31-tool --import D014410A100N0200101CIBMC01140123456789ABCDEFPB04000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 --import-no-strict-validation
	)
	string(CONCAT tr31_tool_test53_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 144 bytes[\r\n]"
		"Key usage: \\[10\\] IBM[\r\n]"
		"Key algorithm: \\[A\\] AES[\r\n]"
		"Key mode of use: \\[1\\] IBM[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[2\\]:[\r\n]"
		"\t\\[10\\] IBM: IBMC01140123456789ABCDEF \\(Common Cryptographic Architecture \\(CCA\\) Control Vector \\(CV\\)\\)[\r\n]"
		"\t\\[PB\\] Padding Block: \"\"[\r\n]"
		"Key not decrypted[\r\n]"
	)
	set_tests_properties(tr31_tool_test53
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test53_regex}
	)

	# test non-IBM proprietary key block
	# NOTE: the input was hand crafted based on tr31_tool_test53 but excludes "IBMC"
	add_test(NAME tr31_tool_test54
		COMMAND tr31-tool --import D014410A100N0200101801140123456789ABCDEFPB08asdf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 --import-no-strict-validation
	)
	string(CONCAT tr31_tool_test54_regex
		"^Key block format version: D[\r\n]"
		"Key block length: 144 bytes[\r\n]"
		"Key usage: \\[10\\] Unknown key usage value[\r\n]"
		"Key algorithm: \\[A\\] AES[\r\n]"
		"Key mode of use: \\[1\\] Unknown key mode of use value[\r\n]"
		"Key version: Unused[\r\n]"
		"Key exportability: \\[N\\] Not exportable[\r\n]"
		"Key context: \\[0\\] Determined by wrapping key[\r\n]"
		"Optional blocks \\[2\\]:[\r\n]"
		"\t\\[10\\] Unknown: 01140123456789ABCDEF[\r\n]"
		"\t\\[PB\\] Padding Block: \"asdf\"[\r\n]"
		"Key not decrypted[\r\n]"
	)
	set_tests_properties(tr31_tool_test54
		PROPERTIES
			PASS_REGULAR_EXPRESSION ${tr31_tool_test54_regex}
	)
endif()
